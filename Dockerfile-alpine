FROM alpine
# to use:
# docker build -t validator/validator .
# docker run -it --rm \
#    -e CONNECTION_TIMEOUT_SECONDS=15 \
#    -e SOCKET_TIMEOUT_SECONDS=15 \
#    -p 8888:8888 \
#    validator/validator
LABEL name="vnu"
LABEL version="dev"
LABEL maintainer="Michael[tm] Smith <mike@w3.org>"
SHELL ["/bin/ash", "-eo", "pipefail", "-c"]
RUN apk add --no-cache --virtual .checksum curl gnupg unzip && \
    runtime_image_url=https://github.com/validator/validator/releases/download/linux/vnu.linux.zip && \
    curl -OOOOL $runtime_image_url{,.asc,.sha1,.sha1.asc} && \
    for keyserver in ha.pool.sks-keyservers.net \
                     pgp.mit.edu \
                     ipv4.pool.sks-keyservers.net \
                     hkp://p80.pool.sks-keyservers.net:80 \
                     keyserver.ubuntu.com \
                     hkp://keyserver.ubuntu.com:80 \
                     keyserver.pgp.com; \
    do gpg --quiet --keyserver $keyserver --recv-keys 100025026C976B92 && break; done && \
    gpg --quiet --verify --trust-model always vnu.linux.zip.asc vnu.linux.zip && \
    gpg --quiet --verify --trust-model always vnu.linux.zip.sha1.asc vnu.linux.zip.sha1 && \
    echo "$(cat vnu.linux.zip.sha1)  vnu.linux.zip" | sha1sum -c - && \
    unzip ./vnu.linux.zip && \
    rm ./vnu.linux.zip* && \
    apk del --purge -r .checksum
ENV LANG C.UTF-8
ENV JAVA_TOOL_OPTIONS ""
ENV CONNECTION_TIMEOUT_SECONDS 5
ENV SOCKET_TIMEOUT_SECONDS 5
ENV BIND_ADDRESS 0.0.0.0
ENV PATH=/vnu-runtime-image/bin:$PATH
EXPOSE 8888
# hadolint ignore=DL3025
CMD CONNECTION_TIMEOUT=$((CONNECTION_TIMEOUT_SECONDS * 1000)); \
    SOCKET_TIMEOUT=$((SOCKET_TIMEOUT_SECONDS * 1000)); \
    ./vnu-runtime-image/bin/java \
    -Dnu.validator.servlet.connection-timeout=$CONNECTION_TIMEOUT \
    -Dnu.validator.servlet.socket-timeout=$SOCKET_TIMEOUT \
    -Dnu.validator.servlet.bind-address=$BIND_ADDRESS \
    -m vnu/nu.validator.servlet.Main 8888
