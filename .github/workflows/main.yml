name: CI

on:
  push:
    branches: [ actions ]
  pull_request:
    branches: [ actions ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#   linux:
#     strategy:
#       fail-fast: false
#       matrix:
# #         java: [8, 11, 13, 14-ea, 15-ea]
#         java: [11]
#     runs-on: ubuntu-latest
#     env:
#       TOMCAT_VERSION: 9.0.33

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#       with:
#         repository: validator/validator
#         submodules: 'recursive'
#     - name: Setup Java JDK
#       uses: actions/setup-java@v1
#       with:
#         java-version: ${{ matrix.java }}
#     - name: Setup Python
#       uses: actions/setup-python@v1
#       with:
#         python-version: '3.x'
#     - name: Cache dependencies
#       uses: actions/cache@v1
#       with:
#         path: ./dependencies
#         key: build-dependencies-${{ hashFiles('build/build.py') }}
#         restore-keys: build-dependencies-
#     - name: Cache extras
#       uses: actions/cache@v1
#       with:
#         path: ./extras
#         key: build-extras-${{ hashFiles('build/build.py') }}
#         restore-keys: build-extras-
#     - name: Install Dependencies
#       run: python ./checker.py dldeps
#     - name: List of dependencies
#       run: |
#         ls ./dependencies
#         ls ./extras   
#     - name: Build
#       run: python ./checker.py build
#     - name: Create JAR package
#       run: python ./checker.py jar
# #     - name: Create a binary runtime image package
# #       run: python ./checker.py image
# #     - name: Create WAR package
# #       run: python ./checker.py war

#     - name: Test JAR package
#       run: |
#         java -jar ./build/dist/vnu.jar ./build/dist/index.html
#         java -jar ./build/dist/vnu.jar ./site/nu-about.html
#         jar xf ./build/dist/vnu.jar && file nu/validator/client/SimpleCommandLineValidator.class | grep "version 52.0"

# #     - name: Setup Jetty
# #       run: |
# #         curl -O https://archive.apache.org/dist/tomcat/tomcat-9/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.zip
# #         unzip apache-tomcat-$TOMCAT_VERSION.zip
# #         chmod a+x apache-tomcat-$TOMCAT_VERSION/bin/*.sh

# #     - name: Test WAR package
# #       run: |
# #         jar xf ./build/dist-war/vnu.war && file WEB-INF/classes/nu/validator/servlet/VerifierServlet.class | grep "version 52.0"
# #         apache-tomcat-$TOMCAT_VERSION/bin/catalina.sh start
# #         cp ./build/dist-war/vnu.war apache-tomcat-$TOMCAT_VERSION/webapps/
# #         sleep 15s; tail apache-tomcat-$TOMCAT_VERSION/logs/catalina.out || true
# #         curl -sS 'http://localhost:8080/vnu/?out=gnu&doc=data:text/html;charset=utf-8,%3C%21doctype%20html%3E%3Cmeta%20charset%3Dutf-8%3E%3Ctitle%3ETest%3C%2Ftitle%3E' > RESULTS
# #         test -z "$(if [ -t RESULTS ]; then cat RESULTS | grep -v '^$'; fi)"
# #         if [ $? != 0 ]; then cat RESULTS; fi

# #     - name: Test suites
# #       run: |
# #         python ./checker.py check
# #         python ./checker.py test
# #     - name: Upload Jar artifact
# #       if: matrix.java == 11 && success()
# #       uses: actions/upload-artifact@v1
# #       with:
# #         name: vnu.jar
# #         path: build/dist/vnu.jar

#     # It will be changed in the future.
# #     - name: Before Deploy
# #       if: matrix.java == 11 && success()
# #       run: |
# #         git config --local user.name "GitHub Actions"
# #         git config --local user.email "mike@w3.org"
# #         git remote set-url origin "https://Umoxfo:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git"
# #         git checkout -b actions
# #         git push --delete origin jar || true
# #         git tag -m jar -f jar
# #         git push origin jar

  jar:
    runs-on: ubuntu-latest
#     needs: linux
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: actions
    - name: Before Deploy
      run: |
        git config --local user.name "GitHub Actions"
        git config --local user.email "mike@w3.org"
        git remote set-url origin https://Umoxfo:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git
        git push --delete origin jar || true
        git tag -m jar -f jar
        git push origin jar
        
#     - name: Download Jar artifact
#       uses: actions/download-artifact@v1
#       with:
#         name: vnu.jar

    - name: GitHub Script
      uses: actions/github-script@0.8.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let release_id;
          try {
              release_id = (await github.repos.getReleaseByTag({
                  ...context.repo,
                  tag: "jar",
              })).data.id;
          } catch (error) {
              // If this returns 404, we need to create the release first.
              if (error.status === 404) {
                  release_id = (await github.repos.createRelease({
                      ...context.repo,
                      tag_name: "jar"
                  })).data.id;
              } else {
                  throw error;
              }
          }

          await github.repos.updateRelease({
            ...context.repo,
            release_id,
            body: context.payload.head_commit.message,
            prerelease: true
          });
#     - name: Upload Release Asset
#       id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./vnu.jar
#         asset_name: vnu.jar
#         asset_content_type: application/zip


#     - name: Deploy JAR package
#       if: matrix.java == 11
#       uses: actions/github-script@0.8.0
#       with:
#         github-token: ${{secrets.GITHUB_TOKEN}}
#         script: |
#           const result = await github.repos.listBranchesForHeadCommit({
#             owner: 'Umoxfo',
#             repo: 'validator',
#             commit_sha: 'actions'
#           });
#           await github.repos.updateRelease({
#             owner: 'Umoxfo',
#             repo: 'validator',
#             release_id: 24725539,
#             target_commitish: result.data[0].commit.sha,
#             prerelease: true
#           });

    - name: Deploy JAR package
      if: matrix.java == 11
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./build/dist/vnu.jar
        asset_name: vnu.jar
        tag: jar
        overwrite: true

#       run: |
#         curl \
#           -sSL \
#           -XPOST \
#           -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
#           --upload-file "./build/dist/vnu.jar" \
#           --header "Content-Type:application/zip" \
#           --write-out "%{http_code}" \
#           --output $(mktemp) \
#           "https://uploads.github.com/repos/${{github.repository}}/releases/24725539/assets?name=vnu.jar"



#     - name: Deploy WAR package
#       uses: actions/upload-artifact@v1
#       if: matrix.java == 11
#       with:
#         name: vnu.war
#         path: "build/dist-war/vnu.war"
#     - name: Deploy the runtime image package
#       uses: actions/upload-artifact@v1
#       if: matrix.java == 11
#       with:
#         # Currently creates a nested zip https://github.com/actions/upload-artifact/issues/3
#         name: vnu.linux.zip
#         path: "build/dist/vnu.linux.zip"
